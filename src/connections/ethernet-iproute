#! /bin/bash
. /usr/lib/network/network

report_iproute()
{
    report_fail "$*"
    set_interface down "$INTERFACE"
    exit 1
}

ethernet_up() {
    load_profile $1

    if [[ ! -e /sys/class/net/$INTERFACE ]]; then
        if ! echo "$INTERFACE" | fgrep -q ":"; then
            report_iproute "Interface $INTERFACE does not exist"
        fi
    fi  

    report_debug ethernet_iproute_up ifup
    set_interface up "$INTERFACE"

    if ip link show dev "$INTERFACE" | fgrep -q "NO-CARRIER"; then
       report_iproute "No connection"
    fi
     
    if checkyesno ${AUTH8021X:-no}; then 
        . ${SUBR_DIR}/8021x
        [[ -z "$WPA_CONF" ]] && WPA_CONF="/etc/wpa_supplicant.conf"
        [[ -z "$WPA_OPTS" ]] && WPA_OPTS="-Dwired"

        report_debug ethernet_iproute_up start_wpa "$INTERFACE" "$WPA_CONF" "$WPA_OPTS"
        if ! start_wpa "$INTERFACE" "$WPA_CONF" "$WPA_OPTS"; then
            report_fail "wpa_supplicant did not start, possible configuration error"
            return 1
        fi
        
        if ! wpa_check "$INTERFACE"; then
            # ignore quirk nodown---is that appropriate? or should we just use report_iproute?
            # this adds a flush call as well---is that appropriate?
            set_interface forcedown "$INTERFACE"
            report_fail "WPA Authentication/Association Failed"
            return 1
        fi 
    fi

    case $IP in
    dhcp)
        # Clear remaining pid files. 
        rm -f /var/run/dhcpcd-${INTERFACE}.{pid,cache} >/dev/null 2>&1

        # If using own dns, tell dhcpcd to NOT replace resolv.conf
        [[ -n "$DNS" ]] && DHCP_OPTIONS="-C resolv.conf $DHCP_OPTIONS"
        
        report_debug ethernet_iproute_up dhcpcd -qL -t "${DHCP_TIMEOUT:-10}" $DHCP_OPTIONS "$INTERFACE"       
        dhcpcd -qL -t "${DHCP_TIMEOUT:-10}" $DHCP_OPTIONS "$INTERFACE" 2>&1 | report_debug $(cat)
        if [[ "$PIPESTATUS" -ne 0 ]]; then
            report_iproute "DHCP IP lease attempt failed"
        fi
        ;;
    static)
        if [[ -n "$ADDR" ]]; then
            report_debug ethernet_iproute_up ip addr add "$ADDR/24" brd + dev "$INTERFACE"
            if ! ip addr add ${ADDR}/24 brd + dev $INTERFACE; then
                report_iproute "Could not configure interface"
            fi
        fi
        if [[ -n "$GATEWAY" ]]; then
            report_debug ethernet_iproute_up ip route add default via "$GATEWAY"
            if ! ip route add default via $GATEWAY; then
                report_iproute "Adding gateway $GATEWAY failed"
            fi
        fi
        ;;
      *)
        report_iproute "Profile error: IP must be either 'dhcp' or 'static'"
        ;;
    esac

    if [[ -n "$IPCFG" ]]; then
        for line in "${IPCFG[@]}"; do
        
            report_debug ethernet_iproute_up ip "$line"            
            if ! ip $line; then
                report_iproute "Could not configure interface ($line)."
            fi
        done
    fi

    # Set hostname
    if [[ -n "$HOSTNAME" ]]; then
        report_debug ethernet_iproute_up hostname "$HOSTNAME"
        if ! hostname $HOSTNAME; then
            report_iproute "Cannot set hostname"
        fi
    fi

    # Generate a new resolv.conf
    if [[ -n "$DNS" ]]; then
        : >/etc/resolv.conf 
        [[ -n "$DOMAIN" ]] && echo "domain $DOMAIN"   >>/etc/resolv.conf
        [[ -n "$SEARCH" ]] && echo "search $SEARCH"   >>/etc/resolv.conf

        if [[ -n "$DNS" ]]; then
            for dns in ${DNS[@]}; do
                echo "nameserver $dns" >>/etc/resolv.conf
            done
        fi
    fi
    return 0
}

ethernet_down() {
    load_profile $1

    if [[ "$IP" == "dhcp" ]]; then
        if [[ -f /var/run/dhcpcd-${INTERFACE}.pid ]]; then
            report_debug ethernet_iproute_down dhcpcd -qx "$INTERFACE"
            dhcpcd -qx "$INTERFACE" &>/dev/null
        fi
    fi
    
    report_debug ethernet_iproute_down if_down
    # ignore quirk nodown---is that appropriate?
    # this adds a flush call as well---is that appropriate?
    set_interface forcedown "$INTERFACE"

}

# Returns status of profile - is it still functional?
ethernet_status() {
    if ! ip link show dev ra0 | fgrep -q "state UP"; then
        return 1
    fi
}

ethernet_$1 $2
exit $?
# vim: set ts=4 et sw=4:
